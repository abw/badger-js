[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/Badger/Codecs/Json.js",
    "content": "/**\n * Function to encode JSON\n * @param {string} data - The data to encode as JSON text\n */\nexport const encode = data => JSON.stringify(data);\n\n/**\n * Function to decode JSON\n * @param {string} json - The JSON text to decode\n */\nexport const decode = json => JSON.parse(json);\n\n/**\n * An object containing the JSON `encode` and `decode` functions\n */\nexport const codec = { encode, decode };\n\nexport default codec\n",
    "static": true,
    "longname": "/Users/abw/js/badger-js/src/Badger/Codecs/Json.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "encode",
    "memberof": "src/Badger/Codecs/Json.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Codecs/Json.js~encode",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Codecs/Json.js",
    "importStyle": "{encode}",
    "description": "Function to encode JSON",
    "lineNumber": 5,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data to encode as JSON text"
      }
    ],
    "return": null
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "decode",
    "memberof": "src/Badger/Codecs/Json.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Codecs/Json.js~decode",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Codecs/Json.js",
    "importStyle": "{decode}",
    "description": "Function to decode JSON",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "The JSON text to decode"
      }
    ],
    "return": null
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "codec",
    "memberof": "src/Badger/Codecs/Json.js",
    "static": true,
    "longname": "src/Badger/Codecs/Json.js~codec",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Codecs/Json.js",
    "importStyle": "{codec}",
    "description": "An object containing the JSON `encode` and `decode` functions",
    "lineNumber": 16,
    "type": {
      "types": [
        "{\"encode\": *, \"decode\": *}"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "file",
    "name": "src/Badger/Codecs/Yaml.js",
    "content": "// simple wrapper around JSON load/dump\nimport yaml from 'js-yaml';\nexport const decode = text => yaml.load(text);\nexport const encode = data => yaml.dump(data);\nexport const codec = { encode, decode };\nexport default codec\n",
    "static": true,
    "longname": "/Users/abw/js/badger-js/src/Badger/Codecs/Yaml.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "decode",
    "memberof": "src/Badger/Codecs/Yaml.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Codecs/Yaml.js~decode",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Codecs/Yaml.js",
    "importStyle": "{decode}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "encode",
    "memberof": "src/Badger/Codecs/Yaml.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Codecs/Yaml.js~encode",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Codecs/Yaml.js",
    "importStyle": "{encode}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "codec",
    "memberof": "src/Badger/Codecs/Yaml.js",
    "static": true,
    "longname": "src/Badger/Codecs/Yaml.js~codec",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Codecs/Yaml.js",
    "importStyle": "{codec}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{\"encode\": *, \"decode\": *}"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "file",
    "name": "src/Badger/Codecs/index.js",
    "content": "import json from './Json.js'\nimport yaml from './Yaml.js'\n\n/**\n * Codecs provide a consistent encode()/decode() interface for serialising\n * and de-serialising data.  This standard naming convention makes it possible\n * for the ../Filesystem/File.js module to support a \"codec\" option for\n * files. When this option is set the file.read() and file.write() methods\n * automatically handle the translation to and from the serialised format\n * using a codec object returned by the codec() function below.  The codec\n * name can be specified in any case, e.g. \"Yaml\", \"YAML\", \"yaml\", \"YaML\",\n * etc., and it will be converted to lower case.\n */\n\n/**\n * Lookup table for codecs\n */\nexport const codecs = {\n  json, yaml\n};\n\n/**\n * Function to fetch a codec\n * @param {string} name - The title of the code, in any case, e.g. \"yaml\", \"YAML\", \"Yaml\"\n */\nexport const codec = name => codecs[\n  name.toLowerCase()\n];\n\nexport default codecs\n",
    "static": true,
    "longname": "/Users/abw/js/badger-js/src/Badger/Codecs/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "codecs",
    "memberof": "src/Badger/Codecs/index.js",
    "static": true,
    "longname": "src/Badger/Codecs/index.js~codecs",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Codecs/index.js",
    "importStyle": "{codecs}",
    "description": "Lookup table for codecs",
    "lineNumber": 18,
    "type": {
      "types": [
        "{\"json\": *, \"yaml\": *}"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "codec",
    "memberof": "src/Badger/Codecs/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Codecs/index.js~codec",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Codecs/index.js",
    "importStyle": "{codec}",
    "description": "Function to fetch a codec",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The title of the code, in any case, e.g. \"yaml\", \"YAML\", \"Yaml\""
      }
    ],
    "return": null
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/Badger/Config.js",
    "content": "import { dir, fail, allParams, anyParams } from '../Badger.js'\n\nconst defaults = {\n  codecs: 'yaml json',\n};\n\nclass Config {\n  constructor(params={}) {\n    const options = { ...defaults, ...params };\n    const [rootDir] = allParams(options, 'dir');\n    const [codec, codecs] = anyParams(options, 'codec codecs');\n\n    this.dir    = dir(root);\n    this.codecs = codecs || [codec];\n\n    console.log('dir: ', this.dir);\n    console.log('codecs: ', this.codecs.dir);\n\n  }\n  path(uri) {\n    return uri.toLowerCase() + '.' + this.codec;\n  }\n  file(uri) {\n    return this.root.file(this.path(uri));\n  }\n  exists(uri) {\n    return this.file(uri).exists();\n  }\n  config(uri) {\n    const file = this.file(uri);\n    return file.exists().then(\n      exists => exists\n        ? file.read()\n        : fail(\"Missing configuration file: \" + file.path())\n    )\n  }\n}\n\nexport default Config\n",
    "static": true,
    "longname": "/Users/abw/js/badger-js/src/Badger/Config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "defaults",
    "memberof": "src/Badger/Config.js",
    "static": true,
    "longname": "src/Badger/Config.js~defaults",
    "access": "public",
    "export": false,
    "importPath": "badger-js/src/Badger/Config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"codecs\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "class",
    "name": "Config",
    "memberof": "src/Badger/Config.js",
    "static": true,
    "longname": "src/Badger/Config.js~Config",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Config.js",
    "importStyle": "Config",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 62,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Badger/Config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Config.js~Config#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "dir",
    "memberof": "src/Badger/Config.js~Config",
    "static": false,
    "longname": "src/Badger/Config.js~Config#dir",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "codecs",
    "memberof": "src/Badger/Config.js~Config",
    "static": false,
    "longname": "src/Badger/Config.js~Config#codecs",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "path",
    "memberof": "src/Badger/Config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Config.js~Config#path",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "uri",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "file",
    "memberof": "src/Badger/Config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Config.js~Config#file",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "uri",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "exists",
    "memberof": "src/Badger/Config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Config.js~Config#exists",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "uri",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "config",
    "memberof": "src/Badger/Config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Config.js~Config#config",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "uri",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "file",
    "name": "src/Badger/Filesystem/Directory.js",
    "content": "import fs from 'fs'\nimport path from 'path';\nimport Path from './Path.js'\nimport { file } from './File.js'\nimport { fail } from '../Utils/Misc.js';\n\nclass Directory extends Path {\n  /**\n   * Fetch a new {@link File} object for a file in the directory.\n   * @param {string} [path] - file path\n   * @param {Object} [options] - file configuration options\n   * @param {Boolean} [options.codec] - codec for encoding/decoding file data\n   * @return {Object} the {@link File} object\n   */\n  file(path, options) {\n    return file(this.relativePath(path), this.options(options));\n  }\n\n  /**\n   * Fetch a new {@link Directory} object for a sub-directory in the directory.\n   * @param {string} [path] - directory path\n   * @param {Object} [options] - directory configuration options\n   * @param {Boolean} [options.codec] - codec for encoding/decoding file data\n   * @return {Object} the {@link Directory} object\n   */\n  directory(path, options) {\n    return dir(this.relativePath(path), this.options(options));\n  }\n\n  /**\n   * An alias for the {@link directory} method for lazy people\n   * @return {Object} the {@link Directory} object\n   */\n  dir(...args) {\n    return this.directory(...args);\n  }\n\n  /**\n   * Returns a new {@link Directory} object for the parent directory\n   * @param {Object} [options] - directory configuration options\n   * @param {Boolean} [options.codec] - codec for encoding/decoding file data\n   * @return {Object} a {@link Directory} object for the parent\n   */\n  parent(options) {\n    return this.directory('..', options);\n  }\n\n  /**\n   * Returns the names of the files and sub-directories in the directory\n   * @return {string[]} file and directory names\n   */\n  read() {\n    return fs.readdirSync(this.path());\n  }\n\n  /**\n   * Determines if the directory is empty.\n   * @return {Boolean} true (empty) or false (not empty).\n   */\n  isEmpty() {\n    return this.read().length === 0;\n  }\n\n  /**\n   * Determines if the directory is not empty.\n   * @return {Boolean} true (not empty) or false (empty).\n   */\n  notEmpty() {\n    return ! this.isEmpty();\n  }\n\n  /**\n   * Empty the directory.\n   * @param {Object} [options] - configuration options\n   * @param {Boolean} [options.force] - force removal of files and directories\n   * @param {Boolean} [options.recursive] - recursively empty and delete sub-directories\n   * @return {Object} the {@link Directory} object\n   */\n  empty(options={}) {\n    if (this.exists() && this.notEmpty()) {\n      fs.rmSync(this.path(), options);\n    }\n    return this;\n  }\n\n  /**\n   * Make the directory.\n   * @param {Object} [options] - configuration options\n   * @param {Boolean} [options.recursive] - create intermediate directories\n   * @return {Object} the {@link Directory} object\n   */\n  mkdir(options={}) {\n    fs.mkdirSync(this.path(), options);\n    return this;\n  }\n\n  /**\n   * Remove the directory.\n   * @param {Object} [options] - configuration options\n   * @param {Boolean} [options.empty] - delete items in directory\n   * @param {Boolean} [options.force] - force delete files and directories\n   * @param {Boolean} [options.recursive] - recursively delete sub-directories\n   * @return {Object} the {@link Directory} object\n   */\n  rmdir(options={}) {\n    if (options.empty) {\n        this.empty(options);\n    }\n    if (this.exists()) {\n      fs.rmdirSync(this.path());\n    }\n    return this;\n  }\n\n  /**\n   * Create the directory and any intermediate directories.\n   * @param {Object} [options] - configuration options\n   * @param {Boolean} [options.recursive=true] - recursively create intermediate directories\n   * @return {Object} the {@link Directory} object\n   */\n  create(options={ recursive: true }) {\n    return this.mkdir(options);\n  }\n\n  /**\n   * Empty and delete the directory.\n   * @param {Object} [options] - configuration options\n   * @param {Boolean} [options.empty=true] - empty directory of any files and sub-directories\n   * @param {Boolean} [options.recursive=true] - recursively delete sub-directories\n   * @param {Boolean} [options.force=true] - force deletion of files and sub-directories\n   * @return {Object} the {@link Directory} object\n   */\n  destroy(options={ empty: true, recursive: true, force: true }) {\n    return this.rmdir(options);\n  }\n\n  /**\n   * Assert that a directory exists and optionally create it\n   * @param {Object} [options] - configuration options\n   * @param {Boolean} [options.create] - create the directory and any intermediate directories if it doesn't exist - equivalent to adding `mkdir` and `recursive` options or calling {@link create}\n   * @param {Boolean} [options.mkdir] - create the directory, add the `recursive` option to create intermediate directories - equivalent to calling {@link mkdir}\n   * @param {Boolean} [options.recursive] - when used with `mkdir`, creates any intermediate directories\n   * @return {Object} the {@link Directory} object\n   */\n  mustExist(options={}) {\n    if (this.exists()) {\n      return this;\n    }\n    if (options.mkdir) {\n      return this.mkdir(options);\n    }\n    if (options.create) {\n      return this.create();\n    }\n    else {\n      return fail(\"Directory does not exist: \", this.path());\n    }\n  }\n}\n\n/**\n * Function to create a new {@link Directory} object\n * @param {string} [path] - directory path\n * @param {Object} [options] - configuration options\n * @param {Boolean} [options.codec] - a codec for encoding/decoding files\n * @return {Object} the {@link Directory} object\n */\nexport const dir = (path, options) => {\n  return new Directory(path, options);\n}\n\n/**\n * Function to create a new {@link Directory} object for the current working directory\n * @param {Object} [options] - configuration options\n * @param {Boolean} [options.codec] - a codec for encoding/decoding files\n * @return {Object} the {@link Directory} object\n */\nexport const cwd = options => {\n  return dir(process.cwd(), options);\n}\n\n/**\n * Function to create a new {@link Directory} object for the directory of a JS source file\n * @param {string} [url] - module url - from `import.meta.url`\n * @param {Object} [options] - configuration options\n * @param {Boolean} [options.codec] - a codec for encoding/decoding files\n * @return {Object} the {@link Directory} object\n */\nexport const bin = (url, options) => {\n  return dir(\n    path.dirname(url.replace(/^file:\\/\\//, '')),\n    options\n  );\n}\n\nexport default Directory\n",
    "static": true,
    "longname": "/Users/abw/js/badger-js/src/Badger/Filesystem/Directory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "dir",
    "memberof": "src/Badger/Filesystem/Directory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Filesystem/Directory.js~dir",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Filesystem/Directory.js",
    "importStyle": "{dir}",
    "description": "Function to create a new {@link Directory} object",
    "lineNumber": 168,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "path",
        "description": "directory path"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.codec",
        "description": "a codec for encoding/decoding files"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 71,
    "kind": "function",
    "name": "cwd",
    "memberof": "src/Badger/Filesystem/Directory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Filesystem/Directory.js~cwd",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Filesystem/Directory.js",
    "importStyle": "{cwd}",
    "description": "Function to create a new {@link Directory} object for the current working directory",
    "lineNumber": 178,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.codec",
        "description": "a codec for encoding/decoding files"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "bin",
    "memberof": "src/Badger/Filesystem/Directory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Filesystem/Directory.js~bin",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Filesystem/Directory.js",
    "importStyle": "{bin}",
    "description": "Function to create a new {@link Directory} object for the directory of a JS source file",
    "lineNumber": 189,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "url",
        "description": "module url - from `import.meta.url`"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.codec",
        "description": "a codec for encoding/decoding files"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 73,
    "kind": "class",
    "name": "Directory",
    "memberof": "src/Badger/Filesystem/Directory.js",
    "static": true,
    "longname": "src/Badger/Filesystem/Directory.js~Directory",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Filesystem/Directory.js",
    "importStyle": "Directory",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/Badger/Filesystem/Path.js~Path"
    ]
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "file",
    "memberof": "src/Badger/Filesystem/Directory.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Directory.js~Directory#file",
    "access": "public",
    "description": "Fetch a new {@link File} object for a file in the directory.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "path",
        "description": "file path"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "file configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.codec",
        "description": "codec for encoding/decoding file data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link File} object"
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "directory",
    "memberof": "src/Badger/Filesystem/Directory.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Directory.js~Directory#directory",
    "access": "public",
    "description": "Fetch a new {@link Directory} object for a sub-directory in the directory.",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "path",
        "description": "directory path"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "directory configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.codec",
        "description": "codec for encoding/decoding file data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "dir",
    "memberof": "src/Badger/Filesystem/Directory.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Directory.js~Directory#dir",
    "access": "public",
    "description": "An alias for the {@link directory} method for lazy people",
    "lineNumber": 34,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    },
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "parent",
    "memberof": "src/Badger/Filesystem/Directory.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Directory.js~Directory#parent",
    "access": "public",
    "description": "Returns a new {@link Directory} object for the parent directory",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "directory configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.codec",
        "description": "codec for encoding/decoding file data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "a {@link Directory} object for the parent"
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "read",
    "memberof": "src/Badger/Filesystem/Directory.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Directory.js~Directory#read",
    "access": "public",
    "description": "Returns the names of the files and sub-directories in the directory",
    "lineNumber": 52,
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "file and directory names"
    },
    "params": []
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "isEmpty",
    "memberof": "src/Badger/Filesystem/Directory.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Directory.js~Directory#isEmpty",
    "access": "public",
    "description": "Determines if the directory is empty.",
    "lineNumber": 60,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "true (empty) or false (not empty)."
    },
    "params": []
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "notEmpty",
    "memberof": "src/Badger/Filesystem/Directory.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Directory.js~Directory#notEmpty",
    "access": "public",
    "description": "Determines if the directory is not empty.",
    "lineNumber": 68,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "true (not empty) or false (empty)."
    },
    "params": []
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "empty",
    "memberof": "src/Badger/Filesystem/Directory.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Directory.js~Directory#empty",
    "access": "public",
    "description": "Empty the directory.",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.force",
        "description": "force removal of files and directories"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.recursive",
        "description": "recursively empty and delete sub-directories"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "mkdir",
    "memberof": "src/Badger/Filesystem/Directory.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Directory.js~Directory#mkdir",
    "access": "public",
    "description": "Make the directory.",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.recursive",
        "description": "create intermediate directories"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "rmdir",
    "memberof": "src/Badger/Filesystem/Directory.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Directory.js~Directory#rmdir",
    "access": "public",
    "description": "Remove the directory.",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.empty",
        "description": "delete items in directory"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.force",
        "description": "force delete files and directories"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.recursive",
        "description": "recursively delete sub-directories"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "create",
    "memberof": "src/Badger/Filesystem/Directory.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Directory.js~Directory#create",
    "access": "public",
    "description": "Create the directory and any intermediate directories.",
    "lineNumber": 121,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.recursive",
        "description": "recursively create intermediate directories"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/Badger/Filesystem/Directory.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Directory.js~Directory#destroy",
    "access": "public",
    "description": "Empty and delete the directory.",
    "lineNumber": 133,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.empty",
        "description": "empty directory of any files and sub-directories"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.recursive",
        "description": "recursively delete sub-directories"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.force",
        "description": "force deletion of files and sub-directories"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "mustExist",
    "memberof": "src/Badger/Filesystem/Directory.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Directory.js~Directory#mustExist",
    "access": "public",
    "description": "Assert that a directory exists and optionally create it",
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.create",
        "description": "create the directory and any intermediate directories if it doesn't exist - equivalent to adding `mkdir` and `recursive` options or calling {@link create}"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.mkdir",
        "description": "create the directory, add the `recursive` option to create intermediate directories - equivalent to calling {@link mkdir}"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.recursive",
        "description": "when used with `mkdir`, creates any intermediate directories"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "src/Badger/Filesystem/File.js",
    "content": "import path from 'path'\nimport Path from './Path.js'\nimport { dir } from './Directory.js'\nimport { codec } from '../Codecs/index.js'\nimport { readFile, writeFile } from 'fs/promises'\n\nclass File extends Path {\n  /**\n   * Returns a new {@link Directory} object for the parent directory of the file\n   * @param {Object} [options] - directory configuration options\n   * @param {Boolean} [options.codec] - codec for encoding/decoding file data\n   * @return {Object} a {@link Directory} object for the parent\n   */\n  directory(options) {\n    return dir(path.dirname(this.state.path), options);\n  }\n\n  /**\n   * An alias for the {@link directory} method for lazy people\n   * @return {Object} the parent {@link Directory} object\n   */\n  dir(...args) {\n    return this.directory(...args);\n  }\n\n  /**\n   * Reads the file content.  If a `codec` has been specified then the content is decoded.\n   * @param {Object} [options] - directory configuration options\n   * @param {Boolean} [options.codec] - codec for encoding/decoding file data\n   * @return {String|Object} the file content\n   * @example\n   * const text = file('myfile.txt').read();\n   * @example\n   * const data = file('myfile.json', { codec: 'json' }).read();\n   * @example\n   * const data = file('myfile.json').read({ codec: 'json' });\n   */\n  read(options) {\n    const opts = this.options(options);\n    const file = readFile(this.state.path, opts);\n    return opts.codec\n      ? file.then(text => codec(opts.codec).decode(text))\n      : file;\n  }\n\n  /**\n   * Writes the file content.  If a `codec` has been specified then the content will be encoded.\n   * @param {String|Object} [data] - directory configuration options\n   * @param {Object} [options] - directory configuration options\n   * @param {Boolean} [options.codec] - codec for encoding/decoding file data\n   * @example\n   * file('myfile.txt').write('Hello World');\n   * @example\n   * file('myfile.json', { codec: 'json' }).write({ message: 'Hello World' });\n   * @example\n   * file('myfile.json').write({ message: 'Hello World' }, { codec: 'json' });\n   */\n  write(data, options) {\n    const opts = this.options(options);\n    const text = opts.codec\n      ? codec(opts.codec).encode(data)\n      : data;\n    return writeFile(this.state.path, text, opts).then( () => this );\n  }\n}\n\n/**\n * Function to create a new {@link File} object for a file\n * @param {String} [path] - file path\n * @param {Object} [options] - configuration options\n * @param {Boolean} [options.codec] - a codec for encoding/decoding files\n * @return {Object} the {@link File} object\n */\nexport const file = (path, options) => {\n  return new File(path, options);\n}\n\nexport default File\n",
    "static": true,
    "longname": "/Users/abw/js/badger-js/src/Badger/Filesystem/File.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "file",
    "memberof": "src/Badger/Filesystem/File.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Filesystem/File.js~file",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Filesystem/File.js",
    "importStyle": "{file}",
    "description": "Function to create a new {@link File} object for a file",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "path",
        "description": "file path"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.codec",
        "description": "a codec for encoding/decoding files"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link File} object"
    }
  },
  {
    "__docId__": 89,
    "kind": "class",
    "name": "File",
    "memberof": "src/Badger/Filesystem/File.js",
    "static": true,
    "longname": "src/Badger/Filesystem/File.js~File",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Filesystem/File.js",
    "importStyle": "File",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/Badger/Filesystem/Path.js~Path"
    ]
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "directory",
    "memberof": "src/Badger/Filesystem/File.js~File",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/File.js~File#directory",
    "access": "public",
    "description": "Returns a new {@link Directory} object for the parent directory of the file",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "directory configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.codec",
        "description": "codec for encoding/decoding file data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "a {@link Directory} object for the parent"
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "dir",
    "memberof": "src/Badger/Filesystem/File.js~File",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/File.js~File#dir",
    "access": "public",
    "description": "An alias for the {@link directory} method for lazy people",
    "lineNumber": 22,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the parent {@link Directory} object"
    },
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "read",
    "memberof": "src/Badger/Filesystem/File.js~File",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/File.js~File#read",
    "access": "public",
    "description": "Reads the file content.  If a `codec` has been specified then the content is decoded.",
    "examples": [
      "const text = file('myfile.txt').read();",
      "const data = file('myfile.json', { codec: 'json' }).read();",
      "const data = file('myfile.json').read({ codec: 'json' });"
    ],
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "directory configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.codec",
        "description": "codec for encoding/decoding file data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Object"
      ],
      "spread": false,
      "description": "the file content"
    }
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "write",
    "memberof": "src/Badger/Filesystem/File.js~File",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/File.js~File#write",
    "access": "public",
    "description": "Writes the file content.  If a `codec` has been specified then the content will be encoded.",
    "examples": [
      "file('myfile.txt').write('Hello World');",
      "file('myfile.json', { codec: 'json' }).write({ message: 'Hello World' });",
      "file('myfile.json').write({ message: 'Hello World' }, { codec: 'json' });"
    ],
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "data",
        "description": "directory configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "directory configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.codec",
        "description": "codec for encoding/decoding file data"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "file",
    "name": "src/Badger/Filesystem/Path.js",
    "content": "import fs from 'fs'\nimport path from 'path';\n\nconst defaultOptions = {\n  encoding: 'utf8'\n}\n\nexport class Path {\n  constructor(path, options={}) {\n    this.state = { path, options: { ...defaultOptions, ...options } };\n  }\n  path() {\n    return this.state.path;\n  }\n  relativePath(...parts) {\n    return path.join(this.state.path, ...parts);\n  }\n  options(options={}) {\n    return { ...this.state.options, ...options };\n  }\n  exists() {\n    return fs.existsSync(this.state.path);\n  }\n  stats() {\n    if (! this.state.stats) {\n      this.state.stats = fs.statSync(this.state.path);\n    }\n    return this.state.stats\n  }\n}\n\nexport default Path\n",
    "static": true,
    "longname": "/Users/abw/js/badger-js/src/Badger/Filesystem/Path.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "defaultOptions",
    "memberof": "src/Badger/Filesystem/Path.js",
    "static": true,
    "longname": "src/Badger/Filesystem/Path.js~defaultOptions",
    "access": "public",
    "export": false,
    "importPath": "badger-js/src/Badger/Filesystem/Path.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"encoding\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "class",
    "name": "Path",
    "memberof": "src/Badger/Filesystem/Path.js",
    "static": true,
    "longname": "src/Badger/Filesystem/Path.js~Path",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Filesystem/Path.js",
    "importStyle": "{Path}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 97,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Badger/Filesystem/Path.js~Path",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Path.js~Path#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 98,
    "kind": "member",
    "name": "state",
    "memberof": "src/Badger/Filesystem/Path.js~Path",
    "static": false,
    "longname": "src/Badger/Filesystem/Path.js~Path#state",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": *, \"options\": *}"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "path",
    "memberof": "src/Badger/Filesystem/Path.js~Path",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Path.js~Path#path",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "relativePath",
    "memberof": "src/Badger/Filesystem/Path.js~Path",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Path.js~Path#relativePath",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "parts",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "options",
    "memberof": "src/Badger/Filesystem/Path.js~Path",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Path.js~Path#options",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "{...undefined: Object, ...options: Object}"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "exists",
    "memberof": "src/Badger/Filesystem/Path.js~Path",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Path.js~Path#exists",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "stats",
    "memberof": "src/Badger/Filesystem/Path.js~Path",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Filesystem/Path.js~Path#stats",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "file",
    "name": "src/Badger/Utils/Misc.js",
    "content": "export function isString(value) {\n  return typeof value === 'string';\n}\n\nexport function isArray(value) {\n  return Array.isArray(value);\n}\n\nexport function isFunction(value) {\n  return typeof value === 'function'\n}\n\nexport function isObject(value) {\n  return typeof value === \"object\"\n    && ! isArray(value)\n    && ! isNull(value);\n}\n\nexport function isUndefined(v) {\n  return typeof v === 'undefined';\n};\n\nexport function isNull(v) {\n  return v === null;\n};\n\nexport function hasValue(v) {\n  return ! (isUndefined(v) || isNull(v));\n}\n\nexport function haveValue(...args) {\n    return args.every( arg => hasValue(arg) );\n}\n\nexport function noValue(v) {\n  return ! hasValue(v);\n}\n\nexport function fail(...args) {\n  throw new Error(args.join(''));\n}\n",
    "static": true,
    "longname": "/Users/abw/js/badger-js/src/Badger/Utils/Misc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "isString",
    "memberof": "src/Badger/Utils/Misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Misc.js~isString",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Misc.js",
    "importStyle": "{isString}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "isArray",
    "memberof": "src/Badger/Utils/Misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Misc.js~isArray",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Misc.js",
    "importStyle": "{isArray}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "isFunction",
    "memberof": "src/Badger/Utils/Misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Misc.js~isFunction",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Misc.js",
    "importStyle": "{isFunction}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "isObject",
    "memberof": "src/Badger/Utils/Misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Misc.js~isObject",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Misc.js",
    "importStyle": "{isObject}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "isUndefined",
    "memberof": "src/Badger/Utils/Misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Misc.js~isUndefined",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Misc.js",
    "importStyle": "{isUndefined}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "isNull",
    "memberof": "src/Badger/Utils/Misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Misc.js~isNull",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Misc.js",
    "importStyle": "{isNull}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "hasValue",
    "memberof": "src/Badger/Utils/Misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Misc.js~hasValue",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Misc.js",
    "importStyle": "{hasValue}",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "haveValue",
    "memberof": "src/Badger/Utils/Misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Misc.js~haveValue",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Misc.js",
    "importStyle": "{haveValue}",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "noValue",
    "memberof": "src/Badger/Utils/Misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Misc.js~noValue",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Misc.js",
    "importStyle": "{noValue}",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "fail",
    "memberof": "src/Badger/Utils/Misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Misc.js~fail",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Misc.js",
    "importStyle": "{fail}",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 115,
    "kind": "file",
    "name": "src/Badger/Utils/Params.js",
    "content": "import { hasValue, fail } from \"./Misc.js\";\nimport { joinListOr, splitList } from \"./Text.js\";\n\nexport function requiredParam(params={}, name) {\n  const value = params[name];\n  if (hasValue(value)) {\n    return value;\n  }\n  else {\n    fail(\"Missing value for required parameter: \", name);\n  }\n}\n\nexport function requiredParams(params={}, names) {\n  return splitList(names).map( name => requiredParam(params, name) );\n}\n\nexport function allParams(...args) {\n  return requiredParams(...args);\n}\n\nexport function anyParams(params, names) {\n  let found = false;\n  const nlist  = splitList(names);\n  const values = nlist.map(\n    name => {\n      const value = params[name];\n      if (hasValue(value)) {\n        found = true;\n      }\n      return value;\n    }\n  );\n  return found\n    ? values\n    : fail(\"Missing value for one of: \", joinListOr(nlist));\n}\n",
    "static": true,
    "longname": "/Users/abw/js/badger-js/src/Badger/Utils/Params.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 116,
    "kind": "function",
    "name": "requiredParam",
    "memberof": "src/Badger/Utils/Params.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Params.js~requiredParam",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Params.js",
    "importStyle": "{requiredParam}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "params",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "requiredParams",
    "memberof": "src/Badger/Utils/Params.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Params.js~requiredParams",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Params.js",
    "importStyle": "{requiredParams}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "params",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "names",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "function",
    "name": "allParams",
    "memberof": "src/Badger/Utils/Params.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Params.js~allParams",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Params.js",
    "importStyle": "{allParams}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "anyParams",
    "memberof": "src/Badger/Utils/Params.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Params.js~anyParams",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Params.js",
    "importStyle": "{anyParams}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "params",
        "types": [
          "*"
        ]
      },
      {
        "name": "names",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "file",
    "name": "src/Badger/Utils/Text.js",
    "content": "import { isString, isArray } from \"./Misc.js\";\n\nexport function splitList(value) {\n  return isString(value) ? value.split(/,\\s*|\\s+/)\n    : isArray(value)  ? value\n    : [value];\n};\n\nexport function joinList(array, joint=' ', lastJoint=joint) {\n  let copy = [...array];\n  const last = copy.pop();\n  return copy.length\n    ? [copy.join(joint), last].join(lastJoint)\n    : last;\n};\n\nexport function joinListAnd(array, joint=', ', lastJoint=' and ') {\n  return joinList(array, joint, lastJoint);\n};\n\nexport function joinListOr(array, joint=', ', lastJoint=' or ') {\n  return joinList(array, joint, lastJoint);\n};\n\nexport function capitalise(word) {\n  return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n}\n\nexport function snakeUp(uri) {\n  return uri.split('/').map(\n    // each segment can be like foo_bar which we convert to FooBar\n    segment => segment.split('_').map(capitalise).join('')\n  ).join('/');\n}\n",
    "static": true,
    "longname": "/Users/abw/js/badger-js/src/Badger/Utils/Text.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "splitList",
    "memberof": "src/Badger/Utils/Text.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Text.js~splitList",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Text.js",
    "importStyle": "{splitList}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "function",
    "name": "joinList",
    "memberof": "src/Badger/Utils/Text.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Text.js~joinList",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Text.js",
    "importStyle": "{joinList}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "joint",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": " ",
        "defaultValue": " "
      },
      {
        "name": "lastJoint",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "joint",
        "defaultValue": "joint"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "joinListAnd",
    "memberof": "src/Badger/Utils/Text.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Text.js~joinListAnd",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Text.js",
    "importStyle": "{joinListAnd}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "joint",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": ", ",
        "defaultValue": ", "
      },
      {
        "name": "lastJoint",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": " and ",
        "defaultValue": " and "
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "joinListOr",
    "memberof": "src/Badger/Utils/Text.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Text.js~joinListOr",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Text.js",
    "importStyle": "{joinListOr}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "joint",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": ", ",
        "defaultValue": ", "
      },
      {
        "name": "lastJoint",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": " or ",
        "defaultValue": " or "
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "function",
    "name": "capitalise",
    "memberof": "src/Badger/Utils/Text.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Text.js~capitalise",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Text.js",
    "importStyle": "{capitalise}",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "word",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "function",
    "name": "snakeUp",
    "memberof": "src/Badger/Utils/Text.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Utils/Text.js~snakeUp",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Utils/Text.js",
    "importStyle": "{snakeUp}",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "uri",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "file",
    "name": "src/Badger/Workspace.js",
    "content": "import path from 'path';\nimport { dir } from './Filesystem/Directory.js'\n\nexport class Workspace {\n  constructor(params={}) {\n    console.log('workspace constructor');\n  }\n  //file(name, options) {\n  //  return file(this.relativePath(name), this.options(options));\n  //}\n  //directory(path, options) {\n  //  return dir(this.relativePath(path), this.options(options));\n  //}\n}\n\nexport const workspace = opts => new Workspace(opts);\n\nexport default workspace;",
    "static": true,
    "longname": "/Users/abw/js/badger-js/src/Badger/Workspace.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 128,
    "kind": "class",
    "name": "Workspace",
    "memberof": "src/Badger/Workspace.js",
    "static": true,
    "longname": "src/Badger/Workspace.js~Workspace",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Workspace.js",
    "importStyle": "{Workspace}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 129,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Badger/Workspace.js~Workspace",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger/Workspace.js~Workspace#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "workspace",
    "memberof": "src/Badger/Workspace.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger/Workspace.js~workspace",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/Workspace.js",
    "importStyle": "{workspace}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "opts",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 131,
    "kind": "file",
    "name": "src/Badger/hello.js",
    "content": "const hello = \"Hello Badger Fans!\"\n\nexport default hello",
    "static": true,
    "longname": "/Users/abw/js/badger-js/src/Badger/hello.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 132,
    "kind": "variable",
    "name": "hello",
    "memberof": "src/Badger/hello.js",
    "static": true,
    "longname": "src/Badger/hello.js~hello",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger/hello.js",
    "importStyle": "hello",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "file",
    "name": "src/Badger.js",
    "content": "export * from './Badger/Codecs/index.js';\nexport * from './Badger/Filesystem/Directory.js';\nexport * from './Badger/Filesystem/File.js';\nexport * from './Badger/Filesystem/Path.js';\nexport * from './Badger/Utils/Misc.js';\nexport * from './Badger/Utils/Params.js';\nexport * from './Badger/Utils/Text.js';\nexport * from './Badger/Workspace.js';\n\nimport { } from './Badger/hello.js';\nimport hello from './Badger/hello.js';\n\nconst sayHello = () => {\n  console.log(hello);\n}\n\nexport default sayHello;",
    "static": true,
    "longname": "/Users/abw/js/badger-js/src/Badger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "sayHello",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~sayHello",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "sayHello",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 143,
    "kind": "variable",
    "name": "codecs",
    "memberof": "src/Badger.js",
    "static": true,
    "longname": "src/Badger.js~codecs",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{codecs}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "{\"json\": *, \"yaml\": *}"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "function",
    "name": "codec",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~codec",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{codec}",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 145,
    "kind": "function",
    "name": "dir",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~dir",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{dir}",
    "description": null,
    "lineNumber": 168,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "function",
    "name": "cwd",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~cwd",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{cwd}",
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "function",
    "name": "bin",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~bin",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{bin}",
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "class",
    "name": "Directory",
    "memberof": "src/Badger.js",
    "static": true,
    "longname": "src/Badger.js~Directory",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "Directory",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/Path.js~Path"
    ]
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "file",
    "memberof": "src/Badger.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Directory#file",
    "access": "public",
    "description": "Fetch a new {@link File} object for a file in the directory.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "path",
        "description": "file path"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "file configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.codec",
        "description": "codec for encoding/decoding file data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link File} object"
    }
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "directory",
    "memberof": "src/Badger.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Directory#directory",
    "access": "public",
    "description": "Fetch a new {@link Directory} object for a sub-directory in the directory.",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "path",
        "description": "directory path"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "directory configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.codec",
        "description": "codec for encoding/decoding file data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "dir",
    "memberof": "src/Badger.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Directory#dir",
    "access": "public",
    "description": "An alias for the {@link directory} method for lazy people",
    "lineNumber": 34,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    },
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "parent",
    "memberof": "src/Badger.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Directory#parent",
    "access": "public",
    "description": "Returns a new {@link Directory} object for the parent directory",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "directory configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.codec",
        "description": "codec for encoding/decoding file data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "a {@link Directory} object for the parent"
    }
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "read",
    "memberof": "src/Badger.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Directory#read",
    "access": "public",
    "description": "Returns the names of the files and sub-directories in the directory",
    "lineNumber": 52,
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "file and directory names"
    },
    "params": []
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "isEmpty",
    "memberof": "src/Badger.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Directory#isEmpty",
    "access": "public",
    "description": "Determines if the directory is empty.",
    "lineNumber": 60,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "true (empty) or false (not empty)."
    },
    "params": []
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "notEmpty",
    "memberof": "src/Badger.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Directory#notEmpty",
    "access": "public",
    "description": "Determines if the directory is not empty.",
    "lineNumber": 68,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "true (not empty) or false (empty)."
    },
    "params": []
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "empty",
    "memberof": "src/Badger.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Directory#empty",
    "access": "public",
    "description": "Empty the directory.",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.force",
        "description": "force removal of files and directories"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.recursive",
        "description": "recursively empty and delete sub-directories"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "mkdir",
    "memberof": "src/Badger.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Directory#mkdir",
    "access": "public",
    "description": "Make the directory.",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.recursive",
        "description": "create intermediate directories"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "rmdir",
    "memberof": "src/Badger.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Directory#rmdir",
    "access": "public",
    "description": "Remove the directory.",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.empty",
        "description": "delete items in directory"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.force",
        "description": "force delete files and directories"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.recursive",
        "description": "recursively delete sub-directories"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "create",
    "memberof": "src/Badger.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Directory#create",
    "access": "public",
    "description": "Create the directory and any intermediate directories.",
    "lineNumber": 121,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.recursive",
        "description": "recursively create intermediate directories"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/Badger.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Directory#destroy",
    "access": "public",
    "description": "Empty and delete the directory.",
    "lineNumber": 133,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.empty",
        "description": "empty directory of any files and sub-directories"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.recursive",
        "description": "recursively delete sub-directories"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.force",
        "description": "force deletion of files and sub-directories"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "mustExist",
    "memberof": "src/Badger.js~Directory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Directory#mustExist",
    "access": "public",
    "description": "Assert that a directory exists and optionally create it",
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.create",
        "description": "create the directory and any intermediate directories if it doesn't exist - equivalent to adding `mkdir` and `recursive` options or calling {@link create}"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.mkdir",
        "description": "create the directory, add the `recursive` option to create intermediate directories - equivalent to calling {@link mkdir}"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.recursive",
        "description": "when used with `mkdir`, creates any intermediate directories"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the {@link Directory} object"
    }
  },
  {
    "__docId__": 162,
    "kind": "function",
    "name": "file",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~file",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{file}",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "class",
    "name": "File",
    "memberof": "src/Badger.js",
    "static": true,
    "longname": "src/Badger.js~File",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "File",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/Path.js~Path"
    ]
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "directory",
    "memberof": "src/Badger.js~File",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~File#directory",
    "access": "public",
    "description": "Returns a new {@link Directory} object for the parent directory of the file",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "directory configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.codec",
        "description": "codec for encoding/decoding file data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "a {@link Directory} object for the parent"
    }
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "dir",
    "memberof": "src/Badger.js~File",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~File#dir",
    "access": "public",
    "description": "An alias for the {@link directory} method for lazy people",
    "lineNumber": 22,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the parent {@link Directory} object"
    },
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "read",
    "memberof": "src/Badger.js~File",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~File#read",
    "access": "public",
    "description": "Reads the file content.  If a `codec` has been specified then the content is decoded.",
    "examples": [
      "const text = file('myfile.txt').read();",
      "const data = file('myfile.json', { codec: 'json' }).read();",
      "const data = file('myfile.json').read({ codec: 'json' });"
    ],
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "directory configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.codec",
        "description": "codec for encoding/decoding file data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Object"
      ],
      "spread": false,
      "description": "the file content"
    }
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "write",
    "memberof": "src/Badger.js~File",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~File#write",
    "access": "public",
    "description": "Writes the file content.  If a `codec` has been specified then the content will be encoded.",
    "examples": [
      "file('myfile.txt').write('Hello World');",
      "file('myfile.json', { codec: 'json' }).write({ message: 'Hello World' });",
      "file('myfile.json').write({ message: 'Hello World' }, { codec: 'json' });"
    ],
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "data",
        "description": "directory configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "directory configuration options"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.codec",
        "description": "codec for encoding/decoding file data"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "class",
    "name": "Path",
    "memberof": "src/Badger.js",
    "static": true,
    "longname": "src/Badger.js~Path",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{Path}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 169,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Badger.js~Path",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Path#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 170,
    "kind": "member",
    "name": "state",
    "memberof": "src/Badger.js~Path",
    "static": false,
    "longname": "src/Badger.js~Path#state",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"path\": *, \"options\": *}"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "path",
    "memberof": "src/Badger.js~Path",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Path#path",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "relativePath",
    "memberof": "src/Badger.js~Path",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Path#relativePath",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "parts",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "options",
    "memberof": "src/Badger.js~Path",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Path#options",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "{...undefined: Object, ...options: Object}"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "exists",
    "memberof": "src/Badger.js~Path",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Path#exists",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "stats",
    "memberof": "src/Badger.js~Path",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Path#stats",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "function",
    "name": "isString",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~isString",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{isString}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "function",
    "name": "isArray",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~isArray",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{isArray}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "function",
    "name": "isFunction",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~isFunction",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{isFunction}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "function",
    "name": "isObject",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~isObject",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{isObject}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "function",
    "name": "isUndefined",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~isUndefined",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{isUndefined}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 181,
    "kind": "function",
    "name": "isNull",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~isNull",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{isNull}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "function",
    "name": "hasValue",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~hasValue",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{hasValue}",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "function",
    "name": "haveValue",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~haveValue",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{haveValue}",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "function",
    "name": "noValue",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~noValue",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{noValue}",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "function",
    "name": "fail",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~fail",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{fail}",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 186,
    "kind": "function",
    "name": "requiredParam",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~requiredParam",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{requiredParam}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "params",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 187,
    "kind": "function",
    "name": "requiredParams",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~requiredParams",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{requiredParams}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "params",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "names",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 188,
    "kind": "function",
    "name": "allParams",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~allParams",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{allParams}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "function",
    "name": "anyParams",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~anyParams",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{anyParams}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "params",
        "types": [
          "*"
        ]
      },
      {
        "name": "names",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "function",
    "name": "splitList",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~splitList",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{splitList}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "function",
    "name": "joinList",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~joinList",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{joinList}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "joint",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": " ",
        "defaultValue": " "
      },
      {
        "name": "lastJoint",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "joint",
        "defaultValue": "joint"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "function",
    "name": "joinListAnd",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~joinListAnd",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{joinListAnd}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "joint",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": ", ",
        "defaultValue": ", "
      },
      {
        "name": "lastJoint",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": " and ",
        "defaultValue": " and "
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 193,
    "kind": "function",
    "name": "joinListOr",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~joinListOr",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{joinListOr}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "joint",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": ", ",
        "defaultValue": ", "
      },
      {
        "name": "lastJoint",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": " or ",
        "defaultValue": " or "
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "function",
    "name": "capitalise",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~capitalise",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{capitalise}",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "word",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "function",
    "name": "snakeUp",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~snakeUp",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{snakeUp}",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "uri",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 196,
    "kind": "class",
    "name": "Workspace",
    "memberof": "src/Badger.js",
    "static": true,
    "longname": "src/Badger.js~Workspace",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{Workspace}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 197,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Badger.js~Workspace",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Badger.js~Workspace#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 198,
    "kind": "function",
    "name": "workspace",
    "memberof": "src/Badger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Badger.js~workspace",
    "access": "public",
    "export": true,
    "importPath": "badger-js/src/Badger.js",
    "importStyle": "{workspace}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "opts",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "# badger\n\nThis is an application toolkit for Javascript projects.",
    "longname": "/Users/abw/js/badger-js/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"badger-js\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Component based framework and utility modules\",\n  \"type\": \"module\",\n  \"main\": \"dist/badger.cjs.js\",\n  \"module\": \"dist/badger.esm.js\",\n  \"browser\": \"dist/badger.umd.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/abw/badger-js.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/abw/badger-js/issues\"\n  },\n  \"scripts\": {\n    \"build\": \"rollup -c\",\n    \"dev\": \"rollup -c -w\",\n    \"build-docs\": \"esdoc\",\n    \"serve-docs\": \"serve docs\",\n    \"Xtest\": \"node test/hello.js\",\n    \"test\": \"ava\",\n    \"pretest\": \"pnpm run build\"\n  },\n  \"keywords\": [\n    \"badger\",\n    \"project\",\n    \"framework\",\n    \"utility\"\n  ],\n  \"author\": \"Andy Wardley\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"@itsjamie/esdoc-cli\": \"^0.5.0\",\n    \"@itsjamie/esdoc-core\": \"^0.5.0\",\n    \"@itsjamie/esdoc-standard-plugin\": \"^0.5.0\",\n    \"@rollup/plugin-commonjs\": \"^11.0.1\",\n    \"@rollup/plugin-node-resolve\": \"^7.1.3\",\n    \"ava\": \"^4.3.0\",\n    \"rollup\": \"^1.29.0\"\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"dependencies\": {\n    \"fs-extra\": \"^10.1.0\",\n    \"js-yaml\": \"^4.1.0\"\n  }\n}\n",
    "longname": "/Users/abw/js/badger-js/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "content": "# badger\n\nThis is the manual for `badger`\n\n## Overview\n\n`badger` is a collection of utility modules for Javascript.\n\n## Installation\n\nInstall `badger` using your favourite package manager.\n\n### npm\n\n    npm install @abw/badger\n\n### pnpm\n\n    pnpm install @abw/badger\n\n### yarn\n\n    yarn add @abw/badger\n\n",
    "longname": "/Users/abw/js/badger-js/manual/index.md",
    "name": "./manual/index.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/abw/js/badger-js/manual/examples.md",
    "name": "./manual/examples.md",
    "content": "# Examples\n\n## Utility Functions\n\nTODO\n\n## Filesystem Functions\n\nTODO\n\n## Project Workspace\n\nTODO",
    "static": true,
    "access": "public"
  }
]